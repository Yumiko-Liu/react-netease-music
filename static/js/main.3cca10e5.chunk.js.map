{"version":3,"sources":["components/AppBar/AppBar.js","components/NavBar/NavBar.js","components/SongList/SongList.js","views/Home/Home.js","views/Personal/Personal.js","layout/Main/Main.js","views/Song/Song.js","App.js","serviceWorker.js","index.js"],"names":["AppBar","react_default","a","createElement","className","type","placeholder","react_router_dom","to","React","Component","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","navbarList","path","icon","name","map","item","key","exact","SongList","src","alt","Home","state","carouselData","entranceList","carousel_default","autoplay","infinite","val","href","components_SongList_SongList","Personal","Main","components_AppBar_AppBar","react_router","component","components_NavBar_NavBar","Song","App","from","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3cca10e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './AppBar.less';\r\n\r\nclass AppBar extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n  render() {\r\n    return (\r\n      <div className={\"appbar-wrapper\"}>\r\n        <div className={\"icon-btn\"}>\r\n          <i className={\"iconfont iconmaikefeng\"}></i>\r\n        </div>\r\n        <div className={\"search-panel full-width\"}>\r\n          <i className={\"iconfont iconsousuo\"}></i>\r\n          <input type=\"text\" placeholder=\"猜你喜欢\" />\r\n        </div>\r\n        <div className={\"icon-btn\"}>\r\n          <Link to={\"/song\"}>\r\n            <i className={\"iconfont iconyinlebofangxuanlvjiezou\"}></i>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppBar;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './NavBar.less';\r\n\r\nclass NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.navbarList = [{\r\n      path: '/main/',\r\n      icon: 'iconfont iconwangyiyunyinle',\r\n      name: '发现'\r\n    }, {\r\n      path: '/main/video',\r\n      icon: 'iconfont iconshipinbofang-',\r\n      name: '视频'\r\n    }, {\r\n      path: '/main/mymusic',\r\n      icon: 'iconfont iconyinyue1',\r\n      name: '我的'\r\n    }, {\r\n      path: '/main/friends',\r\n      icon: 'iconfont iconpengyou',\r\n      name: '朋友'\r\n    }, {\r\n      path: '/main/personal',\r\n      icon: 'iconfont iconuser',\r\n      name: '账号'\r\n    }];\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={\"navbar-wrapper\"}>\r\n        <ul className={\"navbar\"}>\r\n          {this.navbarList.map((item) =>\r\n            <NavLink to={item.path} className={\"navbar-item\"} key={item.name} exact>\r\n              <li>\r\n                <div className={\"navbar-item-icon\"}>\r\n                  <i className={item.icon}></i>\r\n                </div>\r\n                <div className={\"navbar-item-name\"}>{item.name}</div>\r\n              </li>\r\n            </NavLink>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport './SongList.less';\r\n\r\nclass SongList extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n  render() {\r\n    return (\r\n      <div className={\"songlist-wrapper\"}>\r\n        <img className={\"songlist-cover\"} src=\"http://p2.music.126.net/7mcK2bBq3q3tmWIkxt6erQ==/109951164066279070.webp?imageView&thumbnail=246x0&quality=75&tostatic=0&type=webp\" alt=\"\" />\r\n        <p className={\"songlist-txt\"}>疲倦的生活里，总要有些温柔的对待</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SongList;\r\n","import React from 'react';\r\nimport { Carousel } from 'antd-mobile';\r\n\r\nimport SongList from '../../components/SongList/SongList';\r\n\r\nimport './Home.less';\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      carouselData: [\r\n        'http://p1.music.126.net/ue0Sttwv4iUQRzXcuvFO1w==/109951164090788681.jpg',\r\n        'http://p1.music.126.net/4EKGak0vW16gxBDsZjbquQ==/109951164090874954.jpg',\r\n        'http://p1.music.126.net/NwfzOrsXCxfMC5gW3FAfkw==/109951164091546133.jpg'\r\n      ]\r\n    };\r\n    this.entranceList = [{\r\n      path: '',\r\n      icon: 'iconfont iconrili',\r\n      name: '每日推荐'\r\n    }, {\r\n      path: '',\r\n      icon: 'iconfont icongedan',\r\n      name: '歌单'\r\n    }, {\r\n      path: '',\r\n      icon: 'iconfont iconzhuzhuangtutubiao',\r\n      name: '排行榜'\r\n    }, {\r\n      path: '',\r\n      icon: 'iconfont icondiantai',\r\n      name: '电台'\r\n    }, {\r\n      path: '',\r\n      icon: 'iconfont iconzhibo',\r\n      name: '直播'\r\n    }]\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={\"home-wrapper\"}>\r\n        <div className={\"carousel-wrapper\"}>\r\n          <Carousel autoplay={true} infinite>\r\n            {this.state.carouselData.map(val => (\r\n              <a key={val} href=\"http://www.alipay.com\" className={\"carousel-slider-slide-a\"}>\r\n                <img src={val} alt=\"\" />\r\n              </a>\r\n            ))}\r\n          </Carousel>\r\n        </div>\r\n\r\n        <div className={\"entrance-list-wrapper\"}>\r\n          <ul className={\"entrance-list\"}>\r\n            {this.entranceList.map(item => (\r\n              <li>\r\n                <a href=\"#22\">\r\n                  <div className={\"entrance-list-icon\"}>\r\n                    <i className={item.icon}></i>\r\n                  </div>\r\n                  <p>{item.name}</p>\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className={\"remd-songlist-wrapper\"}>\r\n          <h1>推荐歌单</h1>\r\n          <ul>\r\n            <li>\r\n              <SongList />\r\n            </li>\r\n            <li>\r\n              <SongList />\r\n            </li>\r\n            <li>\r\n              <SongList />\r\n            </li>\r\n            <li>\r\n              <SongList />\r\n            </li>\r\n            <li>\r\n              <SongList />\r\n            </li>\r\n            <li>\r\n              <SongList />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nclass Personal extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>Personal</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Personal;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport './Main.less';\r\n\r\nimport AppBar from '../..//components/AppBar/AppBar';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport Home from '../../views/Home/Home';\r\nimport Personal from '../../views/Personal/Personal';\r\n\r\nclass Main extends React.Component {\r\n  render() {\r\n    return (\r\n      <section className={\"main-wrapper\"}>\r\n        <AppBar />\r\n        <div className={\"main-content\"}>\r\n          <Route path=\"/main/\" exact component={Home} />\r\n          <Route path=\"/main/personal\" component={Personal} />\r\n        </div>\r\n        <NavBar />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nclass Song extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>Song</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Song;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Main from './layout/Main/Main';\r\nimport Song from './views/Song/Song';\r\n\r\nimport './assets/css/App.less';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/main\" component={Main} />\r\n          <Route path=\"/song\" component={Song} />\r\n          <Redirect exact from='/' to='/main' />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/css/reset.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}